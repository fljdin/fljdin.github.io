<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sqlmed on Carnet de découvertes</title><link>https://fljd.in/tags/sqlmed/</link><description>Recent content in Sqlmed on Carnet de découvertes</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>Florent Jardin</managingEditor><lastBuildDate>Tue, 28 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://fljd.in/tags/sqlmed/index.xml" rel="self" type="application/rss+xml"/><item><title>Un assistant pour copier les données distantes</title><link>https://fljd.in/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/</link><pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/</guid><description>&lt;p>Lors de la dernière &lt;a href="https://blog.dalibo.com/2023/12/08/pgsession16_programme.html" target="_blank" rel="noopener">PGSession 16&lt;/a>, j&amp;rsquo;ai rédigé et animé un &lt;a href="https://dali.bo/wsfdw_html" target="_blank" rel="noopener">atelier&lt;/a> de
trois heures au sujet de la migration vers PostgreSQL à l&amp;rsquo;aide des Foreign Data
Wrappers, ou FDW. Ce fut notamment l&amp;rsquo;occasion de présenter au grand public,
l&amp;rsquo;extension &lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">&lt;code>db_migrator&lt;/code>&lt;/a> pour laquelle j&amp;rsquo;ai dédié un &lt;a href="https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/">article&lt;/a> sur ce
blog.&lt;/p>
&lt;p>Au cours de cet atelier, nous pouvons constater que la copie des données avec
l&amp;rsquo;extension &lt;code>db_migrator&lt;/code> n&amp;rsquo;est pas parfaitement prise en charge. En effet, bien
qu&amp;rsquo;il existe une fonction de bas niveau pour répartir sur plusieurs processus le
transfert table à table, de nombreuses situations devront exiger de rédiger un
grand nombre de requêtes SQL pour se tirer d&amp;rsquo;affaire. Au cours des mois qui
suivirent, je me suis attelé à la conception d&amp;rsquo;un &lt;a href="https://github.com/fljdin/fdw-assistant" target="_blank" rel="noopener">assistant&lt;/a> écrit en
PL/pgSQL dont le but est de simplifier la génération de ces requêtes.&lt;/p>
&lt;hr>
&lt;h2 id="transfert-des-données-sans-assistant">Transfert des données sans assistant&lt;/h2>
&lt;p>Il n&amp;rsquo;y a pas de magie dans l&amp;rsquo;opération de copie des données à travers un Foreign
Data Wrapper. Tout se résume à une série de requêtes &lt;code>INSERT&lt;/code> qui doivent être
exécutées dans un ordre prédéfini. Prenons les 16 tables du modèle de données
très connu « Sakila » (disponible à cette &lt;a href="https://github.com/ivanceras/sakila/raw/master/mysql-sakila-db" target="_blank" rel="noopener">adresse&lt;/a>), pour illustrer le
besoin de génération des requêtes de transfert.&lt;/p>
&lt;p>&lt;img src="https://fljd.in/img/fr/2024-05-28-sakila-erp.jpg" alt="ERD Base Sakila">&lt;/p>
&lt;p>Pour la pédagogie de cet article, je dispose d&amp;rsquo;une base de données PostgreSQL
avec les deux schémas suivants que j&amp;rsquo;utiliserai dans mes démonstrations :&lt;/p>
&lt;ul>
&lt;li>&lt;code>mysql&lt;/code> : le schéma source contenant la définition des tables externes via
l&amp;rsquo;extension &lt;code>mysql_fdw&lt;/code> ;&lt;/li>
&lt;li>&lt;code>public&lt;/code> : le schéma cible où les données seront copiées.&lt;/li>
&lt;/ul>
&lt;p>Chaque table externe fait l&amp;rsquo;objet d&amp;rsquo;une étude rapide pour obtenir la bonne
correspondance de type de colonne, et leur définition est conservée dans un
fichier SQL à destination des équipes du projet. Par exemple, la table externe
&lt;code>rental&lt;/code> est définie comme suit :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rental&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">rental_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">rental_date&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">timestamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">without&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">zone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">inventory_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">customer_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">smallint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">return_date&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">timestamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">without&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">zone&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">staff_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">smallint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">last_update&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">timestamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">without&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">zone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sakila_mysql&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dbname&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;sakila&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;rental&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lors de la création de la table &lt;code>public.rental&lt;/code> qui accueillera les données, il
est opportun de décider si nous souhaitons mettre en place un partitionnement,
chose que &lt;code>db_migrator&lt;/code> est capable d&amp;rsquo;identifier et de mettre en place. Pour
l&amp;rsquo;exemple, je reprends la structure stricte à l&amp;rsquo;aide de la syntaxe &lt;code>CREATE TABLE LIKE&lt;/code> pour créer toutes mes tables cibles.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Avant même de mettre en place un générateur de requêtes &lt;code>INSERT&lt;/code>, il est aisé
d&amp;rsquo;entrevoir la forme de celles-ci. Chaque ligne de la table externe sera lue à
travers un &lt;code>SELECT&lt;/code> global, puis insérée dans la table cible. Le script de
migration contient ainsi 16 instructions, une pour chaque table.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- insert.sql
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">store&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">store&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pour bénéficier de plusieurs processus, j&amp;rsquo;apprécie l&amp;rsquo;outil &lt;code>xargs&lt;/code> qui permet de
distribuer chaque ligne du fichier &lt;code>insert.sql&lt;/code> sur une nouvelle session &lt;code>psql&lt;/code>.
Cette technique était présentée dans l&amp;rsquo;atelier de février, notamment pour
paralléliser la construction des index et des clés primaires, définis dans un
fichier SQL.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-console" data-lang="console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">$&lt;/span> xargs -P &lt;span class="m">4&lt;/span> -a insert.sql -d &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span> -I % sh -c &lt;span class="s1">&amp;#39;psql -c &amp;#34;%&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">INSERT 0 16
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">INSERT 0 603
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="go">INSERT 0 16044
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>C&amp;rsquo;est un peu rude, ça manque de verbosité, les requêtes SQL sont statiques.
Bref, voyons la partie suivante pour découvrir ce que mon assistant peut
apporter.&lt;/p>
&lt;hr>
&lt;h2 id="démonstration-de-lassistant">Démonstration de l&amp;rsquo;assistant&lt;/h2>
&lt;p>Contrairement à mes autres projets en PL/pgSQL, cet &lt;a href="https://github.com/fljdin/fdw-assistant" target="_blank" rel="noopener">assistant&lt;/a> n&amp;rsquo;est pas une
extension et s&amp;rsquo;installe comme un vulgaire script. Une fois téléchargé, il suffit
de l&amp;rsquo;invoquer sur la base de données de votre choix avec la commande suivante :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-console" data-lang="console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">$&lt;/span> psql -d sakila -f fdw-assistant.sql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Le schéma par défaut se nomme &lt;code>assistant&lt;/code> et contient une table de
&lt;strong>configuration&lt;/strong> sobrement appelée &lt;code>config&lt;/code>. Pour chaque table à migrer, il
suffit d&amp;rsquo;insérer une unique ligne qui servira d&amp;rsquo;élément de départ à la
génération des requêtes de migration des données. On y retrouve dans la version
actuelle les paramètres suivants :&lt;/p>
&lt;ul>
&lt;li>&lt;code>source&lt;/code> : la table externe qui contient les données à copier ;&lt;/li>
&lt;li>&lt;code>target&lt;/code> : la table cible où les données seront copiées ;&lt;/li>
&lt;li>&lt;code>pkey&lt;/code> : la colonne de clé primaire de la table cible ;&lt;/li>
&lt;li>&lt;code>priority&lt;/code> : les valeurs les plus faibles définissent les tables à traiter en
premier ;&lt;/li>
&lt;li>&lt;code>parts&lt;/code> : le nombre de processus à lancer pour la copie des données ;&lt;/li>
&lt;li>&lt;code>trunc&lt;/code> : une option pour vider la table cible avant de copier les données ;&lt;/li>
&lt;li>&lt;code>condition&lt;/code> : une clause &lt;code>WHERE&lt;/code> pour filtrer les données à copier ;&lt;/li>
&lt;li>&lt;code>batchsize&lt;/code> : le nombre de lignes à copier avant de réaliser un &lt;code>COMMIT&lt;/code> intermédiaire.&lt;/li>
&lt;/ul>
&lt;p>Pour initialiser cette table en première intention, il est nécessaire de
connaître &lt;em>a minima&lt;/em> les colonnes de clé primaire de chaque table distante. En
reportant les informations du diagramme relationnel de la base Sakila, nous
pouvons remplir la table &lt;code>config&lt;/code> de la façon suivante :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pkey&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;mysql.actor&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.actor&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;actor_id&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;mysql.address&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.address&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;address_id&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;mysql.store&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.store&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;store_id&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pour chaque transfert, nous indiquons la table source et la table cible, ainsi
que la colonne de clé primaire. Cette dernière est requise pour trier les
lignes, découper le transfert en plusieurs lots (&lt;em>batchs&lt;/em>) et redémarrer le
transfert en cas d&amp;rsquo;interruption.&lt;/p>
&lt;p>À l&amp;rsquo;aide de cette configuration, nous pouvons passer à la &lt;strong>planification&lt;/strong>. Les
tables &lt;code>stage&lt;/code> et &lt;code>job&lt;/code> sont alimentées avec de nouveaux éléments qui serviront
au pilotage et au suivi des différents transferts à déclencher.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">plan&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> target | invocation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------+--------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> customer | CALL assistant.copy(1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> address | CALL assistant.copy(2);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(16 rows)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Une vue nommée &lt;code>report&lt;/code> permet de suivre l&amp;rsquo;avancement des différentes étapes
en joignant les tables &lt;code>stage&lt;/code> et &lt;code>job&lt;/code>. Elle donne notamment des éléments
très utiles pour suivre l&amp;rsquo;avancement et le débit des transferts.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">state&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">report&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stage_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> target | state | rows
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------+---------+------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rental | pending | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> actor | pending | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(16 rows)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les lignes retournées par la commande &lt;code>plan()&lt;/code> peuvent alors être &lt;strong>invoquées&lt;/strong>
les unes après les autres avec la méta-commande &lt;code>\gexec&lt;/code> de &lt;code>psql&lt;/code>, ou alors en
reprenant la technique du fichier et la distribution des requêtes avec &lt;code>xargs&lt;/code>.&lt;/p>
&lt;p>L&amp;rsquo;appel à la méthode &lt;code>copy()&lt;/code> se charge de construire l&amp;rsquo;instruction &lt;code>INSERT&lt;/code>
relative à la copie des données d&amp;rsquo;une table distante vers une table locale. Par
exemple, pour la table &lt;code>customer&lt;/code>, le résultat de l&amp;rsquo;appel sera le suivant :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">NOTICE: Executing: TRUNCATE public.customer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NOTICE: Executing: SELECT count(customer_id) FROM mysql.customer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WHERE customer_id &amp;gt; 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NOTICE: Executing: INSERT INTO public.customer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SELECT customer_id, store_id, first_name, last_name, email,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> address_id, active, create_date, last_update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FROM mysql.customer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WHERE customer_id &amp;gt; 0 ORDER BY customer_id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>À l&amp;rsquo;issue du transfert, la vue &lt;code>report&lt;/code> nous fait un résumé de l&amp;rsquo;opération.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">report&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stage_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.customer&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">-[ RECORD 1 ]-------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stage_id | 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">target | public.customer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">job_start | 2024-05-28 10:19:18.334917
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">state | completed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rows | 599
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total | 599
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">elapsed | 00:00:00.081273
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rate | 7370.22
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">progress | 1.00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eti | 00:00:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eta | 2024-05-28 10:19:18.334917
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="distribution-sur-plusieurs-processus">Distribution sur plusieurs processus&lt;/h2>
&lt;p>Au fur et à mesure de la conception de l&amp;rsquo;assistant, j&amp;rsquo;ai éprouvé le besoin
d&amp;rsquo;enrichir les requêtes sous-jacentes pour répondre à d&amp;rsquo;autres cas d&amp;rsquo;usage,
récurrents dans le domaine de la migration de données. Parmi ceux-ci, on y
retrouve la capacité de répartir les lignes d&amp;rsquo;une même table sur plusieurs
sessions, chacune disposant d&amp;rsquo;une clause &lt;code>WHERE&lt;/code> basé sur le résultat de la
division euclidienne (&lt;em>modulo&lt;/em>) de la clé primaire.&lt;/p>
&lt;p>Pour activer cette fonctionnalité, il suffit de renseigner le paramètre &lt;code>parts&lt;/code>
dans la table &lt;code>config&lt;/code>. Par exemple, pour la table &lt;code>film&lt;/code>, nous pouvons
définir :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.film&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cette configuration prend effet lors de la prochaine planification. L&amp;rsquo;appel à la
méthode &lt;code>plan()&lt;/code> insère alors quatre lignes dans la table &lt;code>job&lt;/code> pour la table
&lt;code>film&lt;/code>, chacune rattachée à une valeur comprise entre 0 et 3. La colonne
&lt;code>condition&lt;/code> est alors enrichie pour les lignes de la table &lt;code>task&lt;/code> en vue de
l&amp;rsquo;étape suivante.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invocation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">plan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;{public.film}&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> invocation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CALL assistant.copy(17);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CALL assistant.copy(18);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CALL assistant.copy(19);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CALL assistant.copy(20);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(4 rows)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">state&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">part&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">condition&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stage_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> job_id | target | state | part | condition
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------+--------+---------+------+-----------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 17 | film | pending | 0 | film_id % 4 = 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 18 | film | pending | 1 | film_id % 4 = 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 19 | film | pending | 2 | film_id % 4 = 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 20 | film | pending | 3 | film_id % 4 = 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lors de l&amp;rsquo;appel à la méthode &lt;code>copy()&lt;/code>, l&amp;rsquo;assistant construit les requêtes
&lt;code>INSERT&lt;/code> sur la base des conditions précédemment définies. Par exemple, pour la
première partie de la table &lt;code>film&lt;/code>, la trace indique les requêtes &lt;code>INSERT&lt;/code> qui
ont été générées.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">NOTICE: Executing: TRUNCATE public.film
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NOTICE: Executing: SELECT count(film_id) FROM mysql.film
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WHERE film_id &amp;gt; 0 AND film_id % 4 = 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NOTICE: Executing: INSERT INTO public.film
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SELECT film_id, title, description, release_year,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> language_id, original_language_id, rental_duration,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rental_rate, length, replacement_cost, rating,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> special_features, last_update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FROM mysql.film WHERE film_id &amp;gt; 0 AND film_id % 4 = 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ORDER BY film_id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;opération &lt;code>TRUNCATE&lt;/code> intervient uniquement pour la session dont la valeur de
&lt;code>part&lt;/code> est égale à 0. Dans le cas nominal, cette session est lancée avant toutes
les autres pour respecter le comportement attendu dans la configuration avec la
colonne &lt;code>trunc&lt;/code> (&lt;code>true&lt;/code> par défaut).&lt;/p>
&lt;p>L&amp;rsquo;intérêt évident de cette méthode est d&amp;rsquo;obtenir le meilleur débit d&amp;rsquo;insertion
pour une table donnée, en reposant sur la puissance d&amp;rsquo;extraction du serveur
distant et la capacité d&amp;rsquo;écriture du serveur local. Le débit peut être consulté
avec la vue &lt;code>report&lt;/code>, notamment pour comparer deux chargements pour une même
table, comme l&amp;rsquo;exemple de la table &lt;code>film&lt;/code>. La colonne &lt;code>rate&lt;/code> est exprimée en
nombre de lignes par seconde.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stage_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">state&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">report&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.film&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> stage_id | target | state | rate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">----------+-------------+-----------+----------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1 | public.film | completed | 19162.59
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2 | public.film | completed | 51389.37
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="reprise-après-interruption">Reprise après interruption&lt;/h2>
&lt;p>La capacité de pouvoir relancer une copie par lot en cas d&amp;rsquo;interruption est une
des raisons pour lesquelles la clé primaire doit être renseignée dans la
configuration. L&amp;rsquo;assistant s&amp;rsquo;appuie sur la dernière valeur de clé primaire
extraite (à l&amp;rsquo;aide d&amp;rsquo;une clause &lt;code>RETURNING&lt;/code>) pour connaître le prochain point de
reprise. Dans la conception de cette fonctionnalité, il m&amp;rsquo;a fallu arbitrer sur
les limitations qu&amp;rsquo;impose ce mécanisme.&lt;/p>
&lt;ul>
&lt;li>Les clés primaires ne doivent pas être composées, car la clause &lt;code>RETURNING&lt;/code>
ne peut retourner qu&amp;rsquo;une seule valeur ;&lt;/li>
&lt;li>Les tables dont la clé primaire est composée ne peuvent pas bénéficier du
traitement par lot, et donc de la reprise après interruption ;&lt;/li>
&lt;li>Les données sont systématiquement triées lors de l&amp;rsquo;extraction, même si le
traitement par lot n&amp;rsquo;est pas activé ;&lt;/li>
&lt;li>La colonne de la clé primaire doit être de type numérique.&lt;/li>
&lt;/ul>
&lt;p>L&amp;rsquo;activation d&amp;rsquo;un traitement par lot consiste à mettre à jour la colonne
&lt;code>batchsize&lt;/code> de la table de configuration. Prenons l&amp;rsquo;exemple de la table
&lt;code>rental&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">batchsize&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.rental&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invocation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">plan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;{public.rental}&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> invocation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CALL assistant.copy(21);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(1 row)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Le transfert des données de la table &lt;code>rental&lt;/code> est alors découpé en lots de 1000
lignes. Il est bien sûr possible de combiner cette technique avec la
parallélisation, la clause &lt;code>WHERE&lt;/code> réalisera l&amp;rsquo;essentiel du travail de
répartition pour empêcher que la même ligne soit exportée deux fois.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">TRUNCATE public.rental
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SELECT count(rental_id) FROM mysql.rental WHERE rental_id &amp;gt; 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO public.rental SELECT rental_id, ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FROM mysql.rental WHERE rental_id &amp;gt; 0 ORDER BY rental_id LIMIT 1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO public.rental SELECT rental_id, ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FROM mysql.rental WHERE rental_id &amp;gt; 16005 ORDER BY rental_id LIMIT 1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO public.rental SELECT rental_id, ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FROM mysql.rental WHERE rental_id &amp;gt; 16049 ORDER BY rental_id LIMIT 1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dès qu&amp;rsquo;une requête ne retourne plus aucune ligne, l&amp;rsquo;assistant considère que le
transfert est terminé. La table &lt;code>job&lt;/code> est mise à jour à chaque itération pour
suivre la dernière valeur de la séquence de clé primaire.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastseq&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stage_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;public.rental&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> target | lastseq
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---------------+---------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public.rental | 16049
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En cas d&amp;rsquo;interruption, il est possible de relancer le transfert en appelant
la méthode &lt;code>copy()&lt;/code> avec le même identifiant de tâche. L&amp;rsquo;assistant se charge de
reprendre le transfert à partir de la dernière valeur de clé primaire connue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">NOTICE: Executing: SELECT count(rental_id) FROM mysql.rental
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WHERE rental_id &amp;gt; 16049
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NOTICE: Executing: INSERT INTO public.rental SELECT rental_id, ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FROM mysql.rental WHERE rental_id &amp;gt; 16049
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ORDER BY rental_id LIMIT 1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>La conception d&amp;rsquo;un tel outil était un petit défi personnel dans la droite lignée
de mes &lt;a href="https://fljd.in/2021/12/06/migrer-vers-postgresql/">recherches&lt;/a> autours de la migration vers PostgreSQL avec l&amp;rsquo;aide exclusive
des Foreign Data Wrappers. Ma principale source d&amp;rsquo;inspiration reste le projet
&lt;a href="https://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2Pg&lt;/a>, l&amp;rsquo;un des outils open-source le plus
complet à ce jour.&lt;/p>
&lt;p>J&amp;rsquo;ai conscience des limites techniques de cet assistant, et du bricolage qu&amp;rsquo;il
reste à mettre en place pour faciliter la vie d&amp;rsquo;un consultant comme moi.
Dans un autre article, j&amp;rsquo;aimerais présenter un autre outil nommé
&lt;a href="https://github.com/fljdin/dispatch" target="_blank" rel="noopener">dispatch&lt;/a> que je maintiens depuis quelque temps et avec lequel je réponds
aux questions d&amp;rsquo;orchestration et traçabilité des étapes de la migration.&lt;/p>
&lt;p>En prenant un peu de recul, les concepts de base sont là, n&amp;rsquo;importe quel autre
outil dans d&amp;rsquo;autres langages pourrait parfaitement émerger et enrichir
l&amp;rsquo;écosystème open-source dans la quête de la migration vers PostgreSQL.&lt;/p></description></item><item><title>En route vers la liberté avec db_migrator</title><link>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</guid><description>&lt;p>J&amp;rsquo;ai passé plusieurs semaines ces derniers mois à contribuer à l&amp;rsquo;extension
&lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a>. Rédigée uniquement en PL/pgSQL, elle permet de migrer les schémas
et les données d&amp;rsquo;un système de bases de données vers PostgreSQL à l&amp;rsquo;aide des
données externes que j&amp;rsquo;avais déjà présentées il y a &lt;a href="https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/">quelques années&lt;/a>.&lt;/p>
&lt;p>Dans cet article, je présente le fonctionnement de l&amp;rsquo;outil, sa philosophie et la
raison d&amp;rsquo;être que je lui ai trouvée, alors même qu&amp;rsquo;il rejoint l&amp;rsquo;écosystème des
projets libres déjà bien installés dans le paysage de la migration. Que vaut-il
aux côtés d&amp;rsquo;&lt;a href="https://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2Pg&lt;/a> ou de &lt;a href="https://pgloader.io/" target="_blank" rel="noopener">pgloader&lt;/a> ?&lt;/p>
&lt;hr>
&lt;h2 id="db_migrator-entre-dans-larène">db_migrator entre dans l&amp;rsquo;arène&lt;/h2>
&lt;p>Mon intérêt pour ce projet remonte à décembre dernier, alors qu&amp;rsquo;un &lt;a href="https://blog.dalibo.com/2022/12/21/depart_philippe.html" target="_blank" rel="noopener">collègue de
chez Dalibo&lt;/a> nous laissait en héritage un &lt;a href="https://github.com/dalibo/data2pg" target="_blank" rel="noopener">outil similaire&lt;/a> avec lequel il
lui était possible de copier les données d&amp;rsquo;instances Oracle ou Sybase à l&amp;rsquo;aide
de la technologie des &lt;em>Foreign Data Wrappers&lt;/em> (FDW). Bien que cet outil soit
resté en alpha, beaucoup de bonnes idées y ont été expérimentées en interne.&lt;/p>
&lt;p>La promesse des FDW réside dans le respect de la norme SQL/MED, à savoir qu&amp;rsquo;une
instance PostgreSQL puisse s&amp;rsquo;interfacer sur un autre système de stockage et en
manipuler les données à travers les tables externes avec de simples requêtes
SQL. Ainsi, pour peu qu&amp;rsquo;une communauté ait développé le &lt;em>wrapper&lt;/em>, il est
possible de consulter un catalogue distant, reproduire la structure des tables,
ses relations et ses contraintes, et de &lt;a href="https://fljd.in/2021/12/06/migrer-vers-postgresql/">rapatrier les données&lt;/a> vers
PostgreSQL.&lt;/p>
&lt;p>Et &lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a> entre dans l&amp;rsquo;arène.&lt;/p>
&lt;p>Rendue publique en novembre 2019 par Laurenz Albe, connu pour sa contribution
active sur PostgreSQL depuis des décennies et également pour le développement de
&lt;a href="https://github.com/laurenz/oracle_fdw" target="_blank" rel="noopener">oracle_fdw&lt;/a>, l&amp;rsquo;extension se présente comme un outil générique avec lequel il
faut employer des &lt;em>plugins&lt;/em> pour la prise en charge des FDW. Il est aisé d&amp;rsquo;en
créer de nouveaux, comme j&amp;rsquo;ai pu m&amp;rsquo;en rendre compte avec le plugin
&lt;a href="https://github.com/fljdin/mysql_migrator" target="_blank" rel="noopener">mysql_migrator&lt;/a>, écrit en quelques jours, grâce à la documentation très
complète de l&amp;rsquo;&lt;a href="https://github.com/cybertec-postgresql/db_migrator#plugin-api" target="_blank" rel="noopener">API des plugins&lt;/a>.&lt;/p>
&lt;p>Après avoir installé les extensions avec &lt;code>make install&lt;/code> ainsi que le FDW du bon
système, il est nécessaire de créer les objets dans la base de données qui va
contenir les futurs schémas et leurs données.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EXTENSION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql_fdw&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EXTENSION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql_migrator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CASCADE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRAPPER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql_fdw&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">host&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_db&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fetch_size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1000&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAPPING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PUBLIC&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;password&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;opération de migration peut être réalisée en une seule commande pour les cas
les plus simples (pas de procédure stockée, ni de types de colonnes exotiques)
avec la méthode &lt;code>db_migrate()&lt;/code>. Sinon, en plusieurs étapes, s&amp;rsquo;il est nécessaire
de faire des ajustements comme le changement du type de colonne ou le retrait
d&amp;rsquo;une table dans le schéma cible.&lt;/p>
&lt;p>Lors du développement de l&amp;rsquo;extension &lt;code>mysql_migration&lt;/code>, je suis parti de la base
d&amp;rsquo;exemple &lt;a href="https://dev.mysql.com/doc/sakila/en/" target="_blank" rel="noopener">Sakila&lt;/a> fournie par MySQL afin d&amp;rsquo;avoir une complexité exhaustive.
La première étape consiste à créer deux schémas internes, l&amp;rsquo;un avec des tables
externes fournies par le plugin, l&amp;rsquo;autre avec des tables de catalogue que l&amp;rsquo;on
peut éditer avant que l&amp;rsquo;extension ne poursuive la migration.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_prepare&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">only_schemas&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{sakila}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cette partie peut être relativement longue, puisqu&amp;rsquo;elle va permettre de
rapatrier le modèle de données, que j&amp;rsquo;appelle le catalogue, sous la forme de
plusieurs tables qui décrivent la structure des tables, le nom des colonnes ou
les contraintes qui leur sont associées. L&amp;rsquo;extension importe également les
sources de toutes les procédures stockées, les fonctions, les vues, mais ne
réalise pas leur conversion en PL/pgSQL (vous ne vous rendez pas compte du
&lt;a href="https://blog.dalibo.com/2020/12/21/migration_oracle_vers_postgresql.html" target="_blank" rel="noopener">travail que cela représente&lt;/a>).&lt;/p>
&lt;p>Dans le cas de la migration de la base Sakila, il est nécessaire de faire
plusieurs modifications du catalogue. Comme le reste avec cette extension, toute
la préparation se réalise en SQL, ce qui rend facile l&amp;rsquo;automatisation avec un
unique script en guise de configuration.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* exclude bytea columns from migration */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DELETE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pgsql_stage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">type_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;bytea&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* quote character expression */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pgsql_stage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">columns&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">default_value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">quote_literal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">default_value&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">regexp_like&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">default_value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;^\-?[0-9]+$&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">default_value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;CURRENT_TIMESTAMP&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* disable view migration */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pgsql_stage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">views&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">migrate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On pourrait bien sûr aller plus loin, comme réinjecter la définition des vues
réécrites dans la table &lt;code>pgsql_stage.views&lt;/code> ou activer la migration des
procédures en changeant la colonne &lt;code>migrate&lt;/code> de la table
&lt;code>pgsql_stage.functions&lt;/code>. Mais progressons avec l&amp;rsquo;étape suivante.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_mkforeign&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_tables&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La première méthode &lt;code>db_migrate_mkforeign()&lt;/code> va se charger de créer les schémas
et les séquences, puis les tables étrangères avec les colonnes au regard des
ajustements précédents. Ensuite, l&amp;rsquo;étape la plus cruciale, on exécute la
fonction &lt;code>db_migrate_tables()&lt;/code> : les tables vierges sont créées avec leurs
partitions si besoin, et pour chacune d&amp;rsquo;entre elles, débute alors la copie des
données avec l&amp;rsquo;instruction &lt;code>INSERT INTO SELECT *&lt;/code>.&lt;/p>
&lt;p>Les autres objets, tels que les index ou les contraintes, disposent de leur
propre méthode. Il est nécessaire de créer les fonctions avant ces derniers si
vous êtes confronté à des index fonctionnels ou que sais-je.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_functions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_triggers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_views&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_indexes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_constraints&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">plugin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql_migrator&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="message">Il se pourrait que ce mécanisme change à l&amp;rsquo;avenir, notamment si je parviens à
concrétiser cette &lt;a href="https://github.com/cybertec-postgresql/db_migrator/issues/26" target="_blank" rel="noopener">issue&lt;/a> qui permettrait de découper les méthodes
&lt;code>db_migrate_*()&lt;/code> en de plus petites étapes.&lt;/div>
&lt;p>La fin de la migration consiste à supprimer les schémas temporaires dans
lesquels se trouvaient les tables du catalogue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">db_migrate_finish&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="raison-dêtre-de-lextension">Raison d&amp;rsquo;être de l&amp;rsquo;extension&lt;/h2>
&lt;p>Comme je le disais en introduction, c&amp;rsquo;est assez surprenant de voir un nouvel
outil de migration émerger en 2023 (la version 1.0.0 est &lt;a href="https://github.com/cybertec-postgresql/db_migrator/blob/master/CHANGELOG.md" target="_blank" rel="noopener">sortie en janvier&lt;/a>
avec mon patch sur l&amp;rsquo;ajout du partitionnement). Dans le paysage open-source, nous
pouvons parler d&amp;rsquo;&lt;strong>Ora2Pg&lt;/strong> qui a sorti en juillet sa &lt;a href="https://github.com/darold/ora2pg/releases/tag/v24.0" target="_blank" rel="noopener">version 24.0&lt;/a> avec
le support de SQL Server ou bien de &lt;strong>pgloader&lt;/strong> qui a une excellente réputation.&lt;/p>
&lt;p>De très nombreux projets sont listés sur le &lt;a href="https://wiki.postgresql.org/wiki/Converting_from_other_Databases_to_PostgreSQL" target="_blank" rel="noopener">wiki communautaire&lt;/a>. Certains
sont spécialisés pour un seul système, d&amp;rsquo;autres en migrent plusieurs. Une très
grande majorité d&amp;rsquo;entre eux sont propriétaires ou n&amp;rsquo;ont plus de contribution
récente. La plupart sont des boîtes noires et leur documentation peut paraître
cryptique, voire quasi inexistante.&lt;/p>
&lt;p>L&amp;rsquo;écosystème est riche, je ne prétends pas tous les connaître, mais j&amp;rsquo;ai une
intuition que je me forge depuis quelques années. L&amp;rsquo;économie mondiale est en
surchauffe. Certaines sociétés se portent bien, d&amp;rsquo;autres font des coupes
budgétaires. La transition vers un système libre et sans licence commerciale
comme PostgreSQL est toujours d&amp;rsquo;actualité, peut-être même plus urgente
aujourd&amp;rsquo;hui en comparaison à la décennie qui vient de s&amp;rsquo;écouler.&lt;/p>
&lt;p>Et pourtant, avec mes lunettes de DBA, je ne me satisfais pas encore des outils
qui existent. J&amp;rsquo;aimerais qu&amp;rsquo;il y ait une nouvelle alternative, quelque chose
d&amp;rsquo;universel et à portée de tout le monde. Si je me tourne aujourd&amp;rsquo;hui vers
&lt;strong>db_migrator&lt;/strong>, ce serait pour les principaux atouts suivants :&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Une implémentation bas niveau au plus près de l&amp;rsquo;instance : avec le PL/pgSQL
comme langage exclusif. Cela n&amp;rsquo;aurait pas été possible bien sûr sans le
développement prolifique des &lt;em>&lt;a href="https://wiki.postgresql.org/wiki/Foreign_data_wrappers" target="_blank" rel="noopener">Foreign Data Wrappers&lt;/a>&lt;/em> pour un grand
nombre de systèmes ;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Une très grande flexibilité de configuration : puisque les ajustements se font avec
des requêtes &lt;code>UPDATE&lt;/code> ou &lt;code>DELETE&lt;/code> sur le catalogue. Pour peu que l&amp;rsquo;on soit à l&amp;rsquo;aise
avec le modèle de ce dernier, il devient facile de changer un comportement sans
consulter une documentation technique sur les options qui se présentent à nous ;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Une liberté dans l&amp;rsquo;orchestration : à ce jour, les exécutions sont déclenchées de
façon séquentielle pour les index et les contraintes, mais l&amp;rsquo;architecture de l&amp;rsquo;outil
pourrait permettre que des outils externes soient responsables de consommer les
résultats de l&amp;rsquo;extension et de déclencher les opérations en parallèle ;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Les plugins sont libres d&amp;rsquo;enrichir la migration : si une opération n&amp;rsquo;est pas
générique, il est tout à fait possible de fournir une méthode supplémentaire à
l&amp;rsquo;aide du plugin. C&amp;rsquo;est le cas de la copie incrémentale (et ses &lt;a href="https://github.com/cybertec-postgresql/ora_migrator#replication-functions" target="_blank" rel="noopener">fonctions de
réplication&lt;/a>) du plugin &lt;strong>ora_migrator&lt;/strong> ou bien la conversion des
auto-incréments en colonnes d&amp;rsquo;identité avec le plugin &lt;strong>mysql_migrator&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Le chemin vers la liberté me semble encore long pour prétendre faire la moitié
de ce que propose déjà Ora2Pg, à commencer par la conversion automatique qui
n&amp;rsquo;est pas du tout à l&amp;rsquo;ordre du jour. Mais avec de petites avancées, régulières
et réfléchies, qui sait ?&lt;/p></description></item><item><title>Migrer vers PostgreSQL</title><link>https://fljd.in/2021/12/06/migrer-vers-postgresql/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2021/12/06/migrer-vers-postgresql/</guid><description>&lt;p>Le marché de la migration en France est intense. Le Groupe de Travail
Inter-Entreprises PostgreSQL (PGGTIE) a même publié un &lt;a href="https://www.postgresql.fr/_media/entreprises/guide-de-transition_v2.0.pdf" target="_blank" rel="noopener">guide de transition&lt;/a>
à PostgreSQL à destination des entreprises françaises. Ce dernier est le fruit
de près de cinq années de travaux au sein de plusieurs organismes publics et a
pour ambition de démontrer l&amp;rsquo;intérêt de PostgreSQL aux décideurs techniques en
présentant les forces et les faiblesses du moteur.&lt;/p>
&lt;p>Le mois dernier, une traduction en anglais est &lt;a href="https://twitter.com/nthonynowocien/status/1458065335387578382" target="_blank" rel="noopener">sortie des cartons&lt;/a> pour
promouvoir davantage ce mouvement vers le logiciel libre dans les autres pays.
Je trouvais intéressant de profiter de cette actualité pour partager mes
réflexions du moment, entre ma vision du marché français et l&amp;rsquo;approche technique
pour engager les migrations de données vers PostgreSQL.&lt;/p>
&lt;hr>
&lt;h2 id="une-transition-à-marche-forcée">Une transition à marche forcée&lt;/h2>
&lt;p>La démarche n&amp;rsquo;est pas anodine, car depuis 2012, l&amp;rsquo;État français au travers de ses
différents ministères, tente de contrer l&amp;rsquo;imposant marché des logiciels
propriétaires en favorisant leurs remplacements systématiques par une alternative
Open Source. Depuis quelques années, le &lt;a href="https://www.numerique.gouv.fr/actualites/socle-interministeriel-des-logiciels-libres-sill-2020/" target="_blank" rel="noopener">Socle Interministériel de Logiciels Libres&lt;/a>
(SILL) est mis à jour par un groupe de travail pour faire un bilan des choix
structurants engagés sur le territoire français.&lt;/p>
&lt;p>La publication d&amp;rsquo;un guide de transition pour PostgreSQL aspire à rassurer les
équipes opérationnelles et décisionnelles en apportant un grand nombre de conseils
et de comparaisons sur ce qu&amp;rsquo;il est aujourd&amp;rsquo;hui possible de faire avec PostgreSQL.
Il mentionne les trois grandes étapes pour réaliser la migration des données
d&amp;rsquo;une application vers le moteur open-source :&lt;/p>
&lt;ul>
&lt;li>migration des données ;&lt;/li>
&lt;li>correction et réécriture des requêtes SQL et des procédures embarquées ;&lt;/li>
&lt;li>recette du système pour écarter les régressions fonctionnelles.&lt;/li>
&lt;/ul>
&lt;p>Chacune de ces étapes a un coût, qu&amp;rsquo;il sera nécessaire de pondérer durant le
chantier de migration. Les logiciels Open Source sont libres, mais ne sont pas
gratuits et c&amp;rsquo;est un rappel essentiel que proposent les conclusions de ce guide.
Les coûts de formation et de prestations externes ne sont également pas
négligeables…&lt;/p>
&lt;p>En 2018, la société française &lt;a href="https://dalibo.com" target="_blank" rel="noopener">Dalibo&lt;/a> avait publié un
&lt;a href="https://public.dalibo.com/archives/marketing/livres_blancs/18.10/DLB01_Migrer_Oracle_Postgresql.pdf" target="_blank" rel="noopener">livre blanc&lt;/a> dans ce même esprit de pédagogie sur l&amp;rsquo;importance des coûts
d&amp;rsquo;investissement et de possession. Dans un scénario de migration, acté sur cinq
années de transition, l&amp;rsquo;étude montre que l&amp;rsquo;analyse de portabilité vers PostgreSQL
est la principale dépense au cours de la première année, suivie par un
investissement important pour la recherche et le développement d&amp;rsquo;un socle d&amp;rsquo;outils
dédiés aux déploiements, la maintenance et l&amp;rsquo;administration du parc PostgreSQL.&lt;/p>
&lt;p>&lt;img src="https://fljd.in/img/fr/2021-12-06-cout-d-investissement.png" alt="Plan d’investissement">&lt;/p>
&lt;p>&lt;img src="https://fljd.in/img/fr/2021-12-06-cout-de-possession.png" alt="Plan de possession">&lt;/p>
&lt;p>La seconde courbe peut paraître surprenante pour du logiciel libre, mais la
nécessité de contracter une offre de support reste d&amp;rsquo;actualité, car trop peu de
services informatiques disposent des compétences internes pour assurer la
disponibilité et la maintenance des instances. Un effort initial de formation est
requis pour aider les administrateurs en poste à faire également leur transition
vers cette autre technologie.&lt;/p>
&lt;p>Pour cette raison, de nombreux acteurs se positionnent depuis des décennies pour
proposer de l&amp;rsquo;accompagnement opérationnel et technique auprès des entreprises
de toutes tailles qui souhaitent (principalement) réduire les coûts de licence
de logiciels propriétaires. Et bien que la transition pouvait être pénible il y
a dix ans, les dernières versions de PostgreSQL et la prolifération d&amp;rsquo;outils
communautaires apportent leur lot de fonctionnalités qui ne rougissent plus
devant les atouts phares de certains mastodontes historiques du marché.&lt;/p>
&lt;hr>
&lt;h2 id="sarmer-doutils-et-de-courage">S&amp;rsquo;armer d&amp;rsquo;outils et de courage&lt;/h2>
&lt;p>Réaliser une migration impose de s&amp;rsquo;équiper d&amp;rsquo;un panel d&amp;rsquo;outils pour simplifier
les grandes lignes de la migration et bien sûr, économiser du temps et de l&amp;rsquo;argent.
Parmi les contributions libres, nous retrouverons l&amp;rsquo;incontournable &lt;a href="https://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2pg&lt;/a>,
spécialisé dans la conversion d&amp;rsquo;un schéma Oracle et la migration de son contenu
vers une instance PostgreSQL. Pour une base de type SQL Server de Microsoft,
&lt;a href="https://pgloader.io/" target="_blank" rel="noopener">pgloader&lt;/a> sera privilégié. Les deux outils supportent également les données
en provenance de MySQL.&lt;/p>
&lt;p>En &lt;a href="https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/">juillet dernier&lt;/a>, je partageais mes réflexions sur l&amp;rsquo;implémentation de la
norme SQL/MED et des &lt;em>foreign data wrappers&lt;/em>, ou connecteurs. L&amp;rsquo;actualité fut
particulièrement riche cet été, avec la sortie de la &lt;a href="https://www.migops.com/blog/2021/07/01/ora2pg-now-supports-oracle_fdw-to-increase-the-data-migration-speed/" target="_blank" rel="noopener">version 22.0&lt;/a> du projet
Ora2Pg, dont le nouveau support de l&amp;rsquo;extension &lt;code>oracle_fdw&lt;/code> annonçait des gains
vertigineux sur le temps de copie des données.&lt;/p>
&lt;p>Ni une ni deux, j&amp;rsquo;ai souhaité comprendre et découvrir les dessous d&amp;rsquo;un tel
procédé en manipulant moi-même les tables externes pour réaliser une migration
de schémas et de données d&amp;rsquo;une base Oracle vers PostgreSQL, sans utiliser l&amp;rsquo;outil
Ora2Pg. Cette procédure s&amp;rsquo;inspire d&amp;rsquo;un &lt;a href="https://www.migops.com/blog/2021/02/15/role-of-foreign-data-wrappers-in-migrations-to-postgresql/" target="_blank" rel="noopener">autre article&lt;/a> de MigOps, publié plus
tôt cette année.&lt;/p>
&lt;h3 id="1-compiler-le-wrapper-communautaire">1. Compiler le wrapper communautaire&lt;/h3>
&lt;p>Le connecteur &lt;code>oracle_fdw&lt;/code> nécessite d&amp;rsquo;être compilé à partir des &lt;a href="https://github.com/laurenz/oracle_fdw/" target="_blank" rel="noopener">sources du projet&lt;/a>
pour prendre en compte les bibliothèques propriétaires d&amp;rsquo;Oracle, garantes du
protocole de connexion et des échanges de données. Dans l&amp;rsquo;exemple ci-dessous, je
dispose d&amp;rsquo;un serveur CentOS 7 avec une instance PostgreSQL 14 et j&amp;rsquo;ai installé
l&amp;rsquo;&lt;em>Instant Client&lt;/em> 19, &lt;a href="https://www.oracle.com/database/technologies/instant-client/downloads.html" target="_blank" rel="noopener">disponible&lt;/a> sur la plateforme de téléchargement d&amp;rsquo;Oracle.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install -y postgresql14-devel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ORACLE_HOME&lt;/span>&lt;span class="o">=&lt;/span>/usr/lib/oracle/19.13/client64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$ORACLE_HOME&lt;/span>/lib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$PATH&lt;/span>:&lt;span class="nv">$ORACLE_HOME&lt;/span>/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ORACLE_FDW_2_4_0/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">PG_CONFIG&lt;/span>&lt;span class="o">=&lt;/span>/usr/pgsql-14/bin/pg_config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">PG_CONFIG&lt;/span>&lt;span class="o">=&lt;/span>/usr/pgsql-14/bin/pg_config install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pour résoudre &lt;a href="https://github.com/laurenz/oracle_fdw/issues/312" target="_blank" rel="noopener">d&amp;rsquo;éventuels problèmes&lt;/a> de détection de la librairie Oracle
&lt;em>Instant Client&lt;/em> et permettre la création de l&amp;rsquo;extension, il est nécessaire de
renseigner la variable &lt;code>$LD_LIBRARY_PATH&lt;/code> pour l&amp;rsquo;instance PostgreSQL au niveau
de son service :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl edit postgresql-14
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ORACLE_HOME=/usr/lib/oracle/19.13/client64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;LD_LIBRARY_PATH=/usr/lib/oracle/19.13/client64/lib&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;extension peut ainsi être créée avec les privilèges d&amp;rsquo;un super-utilisateur
dans la base qui accueillera les données finales. Le privilège &lt;code>USAGE&lt;/code> peut ensuite
être octroyé au propriétaire de la base pour préparer le schéma.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EXTENSION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oracle_fdw&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">GRANT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USAGE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRAPPER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oracle_fdw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hr&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-importer-les-tables-externes">2. Importer les tables externes&lt;/h3>
&lt;p>L&amp;rsquo;unique configuration repose sur la création d&amp;rsquo;un objet &lt;code>SERVER&lt;/code> et l&amp;rsquo;attribution
d&amp;rsquo;un mot de passe pour l&amp;rsquo;utilisateur courant, afin d&amp;rsquo;ouvrir un pont entre les
deux systèmes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">orcl_hr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRAPPER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oracle_fdw&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dbserver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;//localhost:1521/hr&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAPPING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">orcl_hr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">user&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;hr&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;demo&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La magie du &lt;em>wrapper&lt;/em> opère lors de l&amp;rsquo;inspection de la base de données externe
et de la création des relations dans un schéma PostgreSQL. Dans mon exemple, je
dispose d&amp;rsquo;une base Oracle XE avec le &lt;a href="https://github.com/oracle/db-sample-schemas/tree/master/human_resources" target="_blank" rel="noopener">schéma prédéfini HR&lt;/a> contenant une
variété de tables, de vues, d&amp;rsquo;index et de contraintes d&amp;rsquo;intégrité.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SCHEMA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">search_path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">IMPORT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SCHEMA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;HR&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">orcl_hr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Avec &lt;code>psql&lt;/code> et la méta-commande &lt;code>\dE&lt;/code>, il est dès lors possible de consulter les
tables externes importées dans le schéma &lt;code>source&lt;/code>. L&amp;rsquo;une des huit tables est en
réalité une vue, car l&amp;rsquo;extension consulte le catalogue &lt;code>ALL_TAB_COLUMNS&lt;/code> dans
lequel figurent les tables et vues accessibles par l&amp;rsquo;utilisateur connecté. Dans
la phase d&amp;rsquo;étude de la migration, ce point doit être correctement identifié pour
récupérer l&amp;rsquo;ordre de création de la vue, en adaptant la requête SQL si besoin.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> List of relations
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Schema | Name | Type | Owner
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------+------------------+---------------+-------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | countries | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | departments | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | emp_details_view | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | employees | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | job_history | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | jobs | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | locations | foreign table | hr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> source | regions | foreign table | hr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-créer-les-tables-et-les-vues">3. Créer les tables et les vues&lt;/h3>
&lt;p>Pour chacune de ces tables externes, il faut créer leur équivalent dans la base
PostgreSQL. Pour mon exemple, je choisis le schéma &lt;code>public&lt;/code> comme destination.
L&amp;rsquo;une des méthodes les plus rapides repose sur l&amp;rsquo;option &lt;code>LIKE&lt;/code> de l&amp;rsquo;instruction
&lt;code>CREATE TABLE&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_history&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_history&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>À partir de cette étape, il est judicieux d&amp;rsquo;apporter quelques modifications aux
types de colonnes. En effet, les types &lt;code>DATE&lt;/code> et &lt;code>NUMBER&lt;/code> en provenance d&amp;rsquo;Oracle
ont des équivalences bien plus riches et efficientes avec PostgreSQL. Pour aller
plus loin, l&amp;rsquo;un des chapitres de la formation Dalibo « &lt;a href="https://public.dalibo.com/exports/formation/manuels/modules/n3/n3.handout.html#types-de-donn%C3%A9es" target="_blank" rel="noopener">Migrer d’Oracle à
PostgreSQL&lt;/a> » revient sur les différences notables entre les deux systèmes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TYPE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">smallint&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TYPE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">smallint&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hire_date&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TYPE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">date&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_history&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start_date&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TYPE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">date&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">end_date&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TYPE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">date&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La vue, quant à elle, doit être recréée pour les besoins de l&amp;rsquo;application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REPLACE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VIEW&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">emp_details_view&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">manager_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">commission_pct&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job_title&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">state_province&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">country_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">region_name&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">manager_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">commission_pct&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">department_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_title&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">state_province&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">country_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">region_name&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-importer-les-données">4. Importer les données&lt;/h3>
&lt;p>La méthode la plus simple pour importer les données reste la copie table à table
avec l&amp;rsquo;instruction &lt;code>INSERT INTO&lt;/code>. Avec PostgreSQL, la commande &lt;code>TABLE&lt;/code> est
équivalente à un &lt;code>SELECT * FROM&lt;/code>, que j&amp;rsquo;utilise pour alléger les requêtes dans
l&amp;rsquo;exemple ci-dessous.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_history&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">job_history&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dans le cas de tables hautement volumineuses, cette méthode montrera très vite
des faiblesses de performance, car les instructions sont exécutées les unes après
les autres et que le parcours d&amp;rsquo;une table distante n&amp;rsquo;est réalisé que par un seul
processus.&lt;/p>
&lt;p>À moins de développer son propre système de distribution de requêtes et de
lectures parallélisées, sachez que l&amp;rsquo;outil Ora2Pg propose parfaitement des pistes
d&amp;rsquo;optimisation pour accélérer grandement les insertions lors de cette phase de
chargement.&lt;/p>
&lt;h3 id="5-créer-les-séquences-les-index-et-les-contraintes">5. Créer les séquences, les index et les contraintes&lt;/h3>
&lt;p>Cette dernière étape est indispensable pour maintenir la cohérence du modèle et
pour garantir des performances similaires, il ne faut donc pas mésestimer la
phase d&amp;rsquo;étude qui permettra d&amp;rsquo;inventorier les séquences, les index et les
contraintes à recréer dans la base PostgreSQL. Pour aller jusqu&amp;rsquo;au bout de ma
démonstration, voici les instructions à exécuter pour finaliser la migration.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- regions
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reg_id_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- countries
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">country_c_id_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">countr_reg_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">regions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">region_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- locations
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">locations_seq&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3300&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INCREMENT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">MAXVALUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">9900&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;locations_seq&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">loc_id_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">loc_c_id_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">countries&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">country_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- departments
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments_seq&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">280&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INCREMENT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">MAXVALUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">9990&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;departments_seq&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept_id_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept_loc_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">locations&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">location_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- jobs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job_id_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- employees
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees_seq&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">207&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INCREMENT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;employees_seq&amp;#39;&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">regclass&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">emp_emp_id_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">emp_dept_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">emp_job_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">emp_manager_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">manager_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept_mgr_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">manager_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- job_history
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job_history&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jhist_emp_id_st_date_pk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start_date&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jhist_job_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">job_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jhist_emp_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CONSTRAINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jhist_dept_fk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">REFERENCES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dans des situations particulièrement simples, la migration vers PostgreSQL peut
être intégralement réalisée à l&amp;rsquo;aide du langage SQL et d&amp;rsquo;une extension de la
famille des &lt;em>foreign data wrappers&lt;/em>. Cependant, le temps de copie restera très
dépendant de l&amp;rsquo;ordonnancement que l&amp;rsquo;on peut en faire, et du débit de transfert
entre les deux systèmes.&lt;/p>
&lt;hr>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>La migration deviendra complexe lorsque la base de données à migrer embarque du
code PL/SQL stratégique. À moins d&amp;rsquo;extraire la logique métier et de l&amp;rsquo;implémenter
dans une application dédiée, la conversion du code en routines PL/pgSQL méritera
toute votre attention. Bien qu&amp;rsquo;Ora2Pg puisse simplifier le travail de portage
avec une conversion automatique tout à fait honorable, il sera indispensable de
tester la non-régression fonctionnelle.&lt;/p>
&lt;p>Un outil comme &lt;a href="https://fljd.in/2020/05/14/ecrire-ses-tests-unitaires-en-sql/">pgTAP&lt;/a> peut aider à rédiger des tests unitaires ou de bout
en bout pour couvrir le code et vous accompagner dans le portage des procédures.
L&amp;rsquo;année dernière, j&amp;rsquo;avais pris plaisir à rédiger un &lt;a href="https://blog.dalibo.com/2020/12/21/migration_oracle_vers_postgresql.html" target="_blank" rel="noopener">atelier complet&lt;/a> sur la
traduction des procédures PL/SQL fournies avec le schéma HR présenté aujourd&amp;rsquo;hui.
N&amp;rsquo;hésitez pas à le consulter !&lt;/p></description></item><item><title>Parlons un peu des données externes</title><link>https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/</guid><description>&lt;p>Depuis plusieurs semaines, j&amp;rsquo;étudie les nouveautés de la &lt;a href="https://www.postgresql.org/docs/14/release-14.html" target="_blank" rel="noopener">prochaine version majeure&lt;/a>
de PostgreSQL avec un intérêt grandissant pour le connecteur &lt;a href="https://www.postgresql.org/docs/13/postgres-fdw.html" target="_blank" rel="noopener">postgres_fdw&lt;/a>.
Cette extension assez folle n&amp;rsquo;a pas son équivalent sur les autres systèmes de
bases de données du marché, et pour cause, PostgreSQL est l&amp;rsquo;un des rares à respecter
la norme SQL/MED, sous-partie du langage SQL tel que défini par le standard
&lt;a href="https://www.iso.org/standard/63476.html" target="_blank" rel="noopener">ISO/IEC 9075-9&lt;/a>.&lt;/p>
&lt;hr>
&lt;h2 id="un-langage-pour-les-gouverner-tous">Un langage pour les gouverner tous&lt;/h2>
&lt;p>Il y a maintenant plus d&amp;rsquo;un demi-siècle que fut conçu le langage SQL, fruit de
la collaboration de deux chercheurs, &lt;a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6359709" target="_blank" rel="noopener">Donald D. Chamberlin et Ray Boyce&lt;/a>, dans
la lancée des innovations des années 70, tel que le modèle relationnel. Ces deux
personnages souhaitaient à l&amp;rsquo;époque proposer un outil de requêtage relationnel qui
pourrait être accessible au plus grand nombre, dans une langue universelle et sans
formation particulière en mathématique ou en programmation logicielle.&lt;/p>
&lt;p>Alors que Ray Boyce mourut prématurément à l&amp;rsquo;âge de 26 ans, la notoriété de leur
langage s&amp;rsquo;amplifia lors de sa phase de développement chez IBM et le sobrement
nommé « Sequel » changea de nom en conflit avec une autre marque déposée. Ainsi
le nom du projet fut raccourci en « SQL » à l&amp;rsquo;aube de l&amp;rsquo;année 1977. La décennie
qui suivit fut marquée par l&amp;rsquo;émergence des produits comme Oracle Database et DB2,
implémentant alors les prémices du SQL que l&amp;rsquo;on connait aujourd&amp;rsquo;hui.&lt;/p>
&lt;p>En 1986, le langage évolua sous la forme d&amp;rsquo;un standard, repris par les regroupements
ANSI et ISO, afin de promouvoir les règles d&amp;rsquo;écriture et la conformité auprès des
différents éditeurs. Les standards ANSI X3.135 et ISO/IEC 9075 étaient nés. À
partir de ce point précis, et les nombreuses révisions du standard SQL, les
utilisateurs avaient l&amp;rsquo;assurance de ne pas être dépendants d&amp;rsquo;un unique éditeur
logiciel, bien que certains ne répondaient pas à la totalité du standard et
intégraient volontiers des fonctionnalités propriétaires.&lt;/p>
&lt;div class="message">La dernière révision stable de la norme a été proposée en 2016 et &lt;a href="https://www.postgresql.org/docs/13/features.html" target="_blank" rel="noopener">PostgreSQL tend
à couvrir&lt;/a> la totalité des fonctionnalités obligatoires de la norme.&lt;/div>
&lt;p>C&amp;rsquo;est lors de la révision de l&amp;rsquo;année 2003 que le standard fut subdivisé en 9 parties
issues du standard précédent. Chacune d&amp;rsquo;entre elles ayant pour ambition de couvrir
un aspect différent du langage et parmi elles, nous retrouvons celle qui
m&amp;rsquo;intéresse particulièrement ces temps-ci : la norme ISO/IEC 9075-9, &lt;em>Management
of External Data&lt;/em>, aussi appelée &lt;strong>SQL/MED&lt;/strong>.&lt;/p>
&lt;p>Ce &lt;a href="https://www.iso.org/standard/63476.html" target="_blank" rel="noopener">chapitre&lt;/a> de la norme propose les concepts de &lt;em>datalink&lt;/em> et de &lt;em>foreign-data
wrapper&lt;/em>, ainsi que les différentes syntaxes pour les manipuler. Ces éléments peuvent
déjà vous paraître familiers, il s&amp;rsquo;agit de la même terminologie qu&amp;rsquo;emploie PostgreSQL
pour répondre à la norme. Ce standard impliquerait que les données d&amp;rsquo;un système
soient dites externes, si elles sont disponibles et gérés par un autre système de
base de donnée.&lt;/p>
&lt;p>Une telle architecture répondant à ces contraintes permet l&amp;rsquo;émergence des &lt;a href="https://en.wikipedia.org/wiki/Federated_database_system" target="_blank" rel="noopener">systèmes
de bases de données fédérées&lt;/a>, responsables de la gestion d&amp;rsquo;un ensemble de
données autonomes et hétérogènes. Sur le plan théorique, les utilisateurs et les
applications ne se connectent plus qu&amp;rsquo;à un seul point d&amp;rsquo;accès et seraient capables
de consulter et modifier les données éparpillées sur différents moteurs de bases
de données.&lt;/p>
&lt;p>&lt;img src="https://fljd.in/img/fr/2021-07-16-postgresql-as-federated-database-system.png" alt="PostgreSQL, un système fédérateur ?">&lt;/p>
&lt;p>Pour garantir un tel résultat, la norme SQL/MED articule autours des connecteurs
(&lt;em>wrappers&lt;/em>), une série de composant tels que les serveurs distants (&lt;em>foreign
servers&lt;/em>) ou les correspondances d&amp;rsquo;utilisateurs (&lt;em>user mappings&lt;/em>). Ainsi, chaque
connecteur s&amp;rsquo;appuie sur une librairie logicielle pour permettre la communication
avec le serveur à l&amp;rsquo;aide de ces identifiants de connexion.&lt;/p>
&lt;p>Au cours des années qui suivirent, la communauté de développeurs autours de
PostgreSQL s&amp;rsquo;est aligné avec la norme pour proposer plusieurs extensions stables
de &lt;a href="https://wiki.postgresql.org/wiki/Foreign_data_wrappers" target="_blank" rel="noopener">connecteurs&lt;/a>. Aujourd&amp;rsquo;hui, la plupart des systèmes relationnels disposent
d&amp;rsquo;une abstraction pour permettre l&amp;rsquo;accès des données externe à l&amp;rsquo;intérieur de
PostgreSQL.&lt;/p>
&lt;hr>
&lt;h2 id="une-implémentation-aux-petits-oignons">Une implémentation aux petits oignons&lt;/h2>
&lt;p>Avec un cycle de développement annuel et le support d&amp;rsquo;une version majeure sur une
durée de cinq années, les grands chantiers ont fréquemment été menés par petits
pas. L&amp;rsquo;implémentation de SQL/MED dans PostgreSQL n&amp;rsquo;y a pas fait exception.&lt;/p>
&lt;p>C&amp;rsquo;est en juillet 2009 que sort la &lt;a href="https://www.postgresql.org/docs/8.4/release-8-4.html" target="_blank" rel="noopener">version 8.4&lt;/a>, la dernière de la branche 8.x
avant l&amp;rsquo;avènement des versions plus récentes. L&amp;rsquo;architecture qui rendrait possible
les connecteurs avait été posée. Le catalogue fut &lt;a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=cae565e503c42a0942ca1771665243b4453c5770" target="_blank" rel="noopener">enrichi&lt;/a> par de nouvelles vues,
telles que &lt;code>pg_foreign_data_wrapper&lt;/code>, &lt;code>pg_foreign_server&lt;/code> ou &lt;code>pg_user_mapping&lt;/code> et
de nouvelles commandes préparaient le terrain.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRAPPER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">postgresql&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRAPPER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">postgresql&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dbname&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;demo&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAPPING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La gestion des données distantes n&amp;rsquo;était alors possible qu&amp;rsquo;à travers l&amp;rsquo;extension
&lt;code>dblink&lt;/code> qui fut rendue compatible avec les nouveaux objets de la norme SQL/MED.
L&amp;rsquo;exemple ci-dessous s&amp;rsquo;appuie sur le serveur &lt;code>demo&lt;/code> avec une connexion préalable
à l&amp;rsquo;aide de la méthode &lt;code>dblink_connect&lt;/code>. À cette époque, les connecteurs reposaient
sur la &lt;code>libpq&lt;/code> par défaut.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- les extensions n&amp;#39;existent pas encore en version 8.4 :-)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">contrib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">dblink&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">dblink&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">sql&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dblink_connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;myconn&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;demo&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- dblink_connect
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- ----------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- OK
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dblink&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;myconn&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;SELECT word FROM messages&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">text&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- hello
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- -------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- world
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Le projet &lt;code>pl/proxy&lt;/code> profita également de ces améliorations pour définir un &lt;a href="https://plproxy.github.io/config.html#sqlmed-cluster-definitions" target="_blank" rel="noopener">cluster
de serveurs distants&lt;/a> sur lesquels il était possible d&amp;rsquo;exécuter des fonctions
déportées, et d&amp;rsquo;envisager une architecture éclatée (&lt;em>sharding&lt;/em>) sur plusieurs
instances PostgreSQL.&lt;/p>
&lt;hr>
&lt;p>En septembre 2011, les choses s&amp;rsquo;accélérèrent à la sortie de PostgreSQL 9.1 avec
l&amp;rsquo;ajout des tables distantes (ou &lt;em>foreign tables&lt;/em>) pour compléter le chantier
initié par la version 8.4. Bien qu&amp;rsquo;elles n&amp;rsquo;étaient accessibles qu&amp;rsquo;en lecture seule,
leur fonctionnement faisait pâlir &lt;code>dblink&lt;/code> à bien des égards.&lt;/p>
&lt;p>Derrière chaque table distante se cache un connecteur, préalablement configuré
avec ses informations d&amp;rsquo;accès et d&amp;rsquo;authentification. En plus du &lt;em>wrapper&lt;/em> interne
pour les instances PostgreSQL, la contribution &lt;code>file_fdw&lt;/code> fut ajoutée au projet
afin d&amp;rsquo;autoriser les fichiers CSV et COPY comme sources de données externes. Ce
type de table est similaire aux &lt;a href="https://oracle-base.com/articles/9i/external-tables-9i" target="_blank" rel="noopener">tables externes&lt;/a> qu&amp;rsquo;Oracle propose pour les
formats CSV, Datapump ou SQL*Loader.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EXTENSION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file_fdw&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file_server&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRAPPER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file_fdw&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOREIGN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">department_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SERVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file_server&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OPTIONS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;path&amp;gt;/departments.dat&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sur pareilles tables, PostgreSQL supporte uniquement les contraintes &lt;code>(NOT) NULL&lt;/code>
et &lt;code>CHECK&lt;/code> pour des besoins de planification. Ces contraintes doivent être assurées
par le serveur distant. Les clés primaires ou contraintes &lt;code>UNIQUE&lt;/code> impliquent la
création d&amp;rsquo;un index, qui ne sont pas supportés pour les tables distantes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- ERROR: cannot create index on foreign table &amp;#34;departments&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;usage premier des tables distantes consiste à intégrer ces relations dans les
requêtes SQL comme de simples tables, ce qui vous l&amp;rsquo;avouerez, reste bien plus
simple que d&amp;rsquo;écrire des sous-requêtes avec les résultats par &lt;code>dblink&lt;/code>. Par ailleurs,
le nœud &lt;code>Foreign Scan&lt;/code> fait son introduction pour représenter la lecture distante
à travers le connecteur.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">analyze&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">costs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">off&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">employee_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">departments&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> QUERY PLAN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HashAggregate (actual time=0.084..0.084 rows=1 loops=1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; Nested Loop (actual time=0.058..0.077 rows=1 loops=1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; Foreign Scan on departments
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (actual time=0.034..0.050 rows=1 loops=1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Filter: (department_id = 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Foreign File: departments.dat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; Index Scan using employees_department_id_idx on employees
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (actual time=0.020..0.022 rows=1 loops=1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Index Cond: (department_id = 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Total runtime: 0.230 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>La page &lt;a href="https://pgpedia.info/f/foreign-data-wrapper-fdw.html" target="_blank" rel="noopener">pgpedia&lt;/a> sur les FDW reprend l&amp;rsquo;historique des améliorations
apportées entre chaque version majeure depuis une décennie. Le travail abattu est
impressionnant et se poursuit encore avec la prochaine version. L&amp;rsquo;architecture
pensée lors de la version 8.4 reste toujours fiable, robuste et aura permis
l&amp;rsquo;émergence de nombreux connecteurs pour PostgreSQL (&lt;a href="https://www.postgresql.org/docs/13/postgres-fdw.html" target="_blank" rel="noopener">postgres_fdw&lt;/a>), Oracle
(&lt;a href="https://github.com/laurenz/oracle_fdw" target="_blank" rel="noopener">oracle_fdw&lt;/a>) ou SQL Server (&lt;a href="https://github.com/tds-fdw/tds_fdw" target="_blank" rel="noopener">tds_fdw&lt;/a>).&lt;/p>
&lt;p>Parmi les nombreuses possibilités qu&amp;rsquo;apporte la norme SQL/MED, j&amp;rsquo;ai pu apprécier
récemment l&amp;rsquo;usage du connecteur Oracle dans la version 22.0 de l&amp;rsquo;outil &lt;a href="https://www.migops.com/blog/2021/07/01/ora2pg-now-supports-oracle_fdw-to-increase-the-data-migration-speed/" target="_blank" rel="noopener">Ora2Pg&lt;/a>
pour les migrations de données grâces aux tables distantes. Avec la version 14 de
PostgreSQL, la &lt;a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=27e1f14563cf982f1f4d71e21ef247866662a052" target="_blank" rel="noopener">lecture asynchrone des partitions distantes&lt;/a> permettra
d&amp;rsquo;accélérer passablement les requêtes d&amp;rsquo;analyse sur de fortes volumétries.&lt;/p></description></item></channel></rss>